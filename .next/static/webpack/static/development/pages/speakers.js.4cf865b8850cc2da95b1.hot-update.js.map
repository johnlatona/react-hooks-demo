{"version":3,"file":"static/webpack/static/development/pages/speakers.js.4cf865b8850cc2da95b1.hot-update.js","sources":["webpack:///./src/SpeakerData.js","webpack:///./src/Speakers.js"],"sourcesContent":["const speakerData = [\n  {\n    id: 1530,\n    firstName: \"Tammy\",\n    lastName: \"Baker\",\n    sat: false,\n    sun: true,\n    favorite: true,\n    bio: \"Tammy has held a number of executive and management roles over the past 15 years\"\n  },\n  {\n    id: 5996,\n    firstName: 'Craig',\n    lastName: 'Berntson',\n    sat: true,\n    sun: true,\n    favorite: false,\n    bio: \"Craig has a passion for community and helping other developers improve their skills.\"\n  },\n  {\n    id: 10803,\n    firstName: \"Eugene\",\n    lastName: \"Chuvyrov\",\n    sat: true,\n    sun: false,\n    favorite: false,\n    bio: \"Eugene Chuvyrov is a Senior Cloud Architect at Microsoft.\"\n  }\n];\n\nexport default speakerData;","import React, { useState, useEffect } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from '../src/Header';\nimport { Menu } from '../src/Menu';\nimport SpeakerData from './SpeakerData';\nimport SpeakerDetail from './SpeakerDetail';\n\nconst Speakers = ({}) => {\n  const [speakingSaturday, setSpeakingSaturday] = useState(true);\n  const [speakingSunday, setSpeakingSunday] = useState(true);\n\n  const [speakerList, setSpeakerList] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    setIsLoading(true);\n    new Promise(function(resolve) {\n      setTimeout(function() {\n        resolve();\n      }, 1000);\n    })\n    .then(() => {\n      setIsLoading(false);\n      const speakerListServerFilter = SpeakerData.filter(({sat, sun}) => {\n        return (speakingSaturday && sat) || (speakingSunday && sun);\n      });\n      setSpeakerList(speakerListServerFilter);\n    });\n    return () => {\n      console.log(\"clean up\");\n    }\n  }, []);\n\n  const speakerListFiltered = isLoading ? []\n    : speakerList.filter(\n      ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n    )\n    .sort(function(a, b) {\n      if (a.firstName < b.firstName) {\n        return -1;\n      }\n      if (a.firstName > b.firstName) {\n        return 1;\n      }\n      return 0;\n    });\n\n  const handleChangeSaturday = () => {\n    setSpeakingSaturday(!speakingSaturday);\n  }\n\n  const handleChangeSunday = () => {\n    setSpeakingSunday(!speakingSunday);\n  };\n\n  const heartFavoriteHandler = (e, favoriteValue) => {\n    e.preventDefault();\n    const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n    setSpeakerList(speakerList.map(item => {\n      if (item.id === sessionId) {\n        item.favorite = favoriteValue;\n        return item;\n      }\n      return item;\n    }));\n  }\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <Header />\n      <Menu />\n      <div className=\"container\">\n        <div className=\"btn-toolbar margintopbottom5 checkbox-bigger\">\n          <div className=\"hide\">\n            <label className=\"form-check-label\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                onChange={handleChangeSaturday}\n                checked={speakingSaturday}\n              />\n              Saturday Speakers\n            </label>\n          </div>\n          <div className=\"form-check-inline\">\n            <label className=\"form-check-label\">\n              <input\n                type=\"checkbox\"\n                className=\"form-check-input\"\n                onChange={handleChangeSunday}\n                checked={speakingSunday}\n              />\n              Sunday Speakers\n            </label>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"card-deck\">\n          {speakerListFiltered.map(\n            ({id, firstName, lastName, bio, favorite }) => {\n              return (\n                <SpeakerDetail\n                  key={id}\n                  id={id}\n                  favorite={favorite}\n                  onHeartFavoriteHandler={heartFavoriteHandler}\n                  firstName={firstName}\n                  lastName={lastName}\n                  bio={bio}\n                />\n              );\n            }\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Speakers;"],"mappings":";;;;;;;;;;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAWA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAMA;AACA;AACA;;;;A","sourceRoot":""}
{"version":3,"file":"static/webpack/static/development/pages/speakers.js.aaff169ed8f3672c3c91.hot-update.js","sources":["webpack:///./src/App.js","webpack:///./src/SignMeUp.js","webpack:///./src/Speakers.js"],"sourcesContent":["import React from 'react';\nimport Home from './Home';\nimport Speakers from './Speakers';\n\nexport const ConfigContext = React.createContext();\n\nconst pageToShow = pageName => {\n  if (pageName === 'Home') return <Home/>\n  if (pageName === 'Speakers') return <Speakers/>\n  return <div>Not Found</div>;\n}\n\nconst configValue = {\n  showSpeakerSpeakingDays: true,\n  showSignMeUp: true,\n}\n\nconst App = ({pageName}) => {\n  return (\n    <ConfigContext.Provider value={configValue}>\n      <div>{pageToShow(pageName)}</div>\n    </ConfigContext.Provider>\n  );\n};\n\nexport default App;","import React, { useState, useEffect, useContext } from 'react';\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { ToastContainer, toast } from 'react-toastify';\nimport { ConfigContext } from './App';\n\nconst SignMeUp = ({ signupCallback }) => {\n  useEffect(() => {\n    console.log(`SignMeUp:useEffect called`);\n  });\n\n  const [email, setEmail] = useState();\n  const [emailValid, setEmailValid] = useState(true);\n  const [sendProcessing, setSendProcessing] = useState(false);\n\n  const context = useContext(ConfigContext);\n\n  const validateEmail = email => {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n\n  const notify = () => {\n    toast.info(`You will be notified of upcoming events ${email}`);\n  }\n\n  const sendEmailToBackend = () => {\n    setSendProcessing(true);\n    new Promise(function(resolve) {\n      setTimeout(function() {\n        setSendProcessing(false);\n        setEmail(\"\");\n        resolve();\n      }, 1000);\n    })\n    .then(() => {\n      notify();\n      signupCallback(email);\n      setEmail(\"\");\n    })\n  }\n\n  const buttonText = sendProcessing ? \"processing...\" : \"Get Updates\";\n\n  return context.showSignMeUp === false ? null : (\n    <div className=\"container\">\n      <div>\n        <ToastContainer/>\n        <div className=\"content\">\n          <input\n            value={email}\n            onChange={e => {\n              setEmailValid(validateEmail(e.target.value));\n              return setEmail(e.target.value);\n            }}\n            placeholder=\"Enter Email\"\n            type=\"email\"\n            name=\"email\"\n            required\n            required\n          />\n          &nbsp;\n          <button\n            disabled={!emailValid || sendProcessing}\n            className=\"btn\"\n            onClick={sendEmailToBackend}\n            type=\"submit\"\n          >\n            {buttonText}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default SignMeUp;","import React, { useState, useEffect, useContext, useReducer } from 'react';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"../static/site.css\";\nimport { Header } from '../src/Header';\nimport { Menu } from '../src/Menu';\nimport SpeakerData from './SpeakerData';\nimport SpeakerDetail from './SpeakerDetail';\nimport { ConfigContext } from './App';\n\nconst Speakers = ({}) => {\n  const [speakingSaturday, setSpeakingSaturday] = useState(true);\n  const [speakingSunday, setSpeakingSunday] = useState(true);\n\n  // const [speakerList, setSpeakerList] = useState([]);\n  const [speakerList, setSpeakerList] = useReducer((state, action) => action, []);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const context = useContext(ConfigContext);\n\n  useEffect(() => {\n    setIsLoading(true);\n    new Promise(function(resolve) {\n      setTimeout(function() {\n        resolve();\n      }, 1000);\n    })\n    .then(() => {\n      setIsLoading(false);\n      const speakerListServerFilter = SpeakerData.filter(({sat, sun}) => {\n        return (speakingSaturday && sat) || (speakingSunday && sun);\n      });\n      setSpeakerList(speakerListServerFilter);\n    });\n    return () => {\n      console.log(\"clean up\");\n    }\n  }, []);\n\n  const speakerListFiltered = isLoading ? []\n    : speakerList.filter(\n      ({ sat, sun }) => (speakingSaturday && sat) || (speakingSunday && sun)\n    )\n    .sort(function(a, b) {\n      if (a.firstName < b.firstName) {\n        return -1;\n      }\n      if (a.firstName > b.firstName) {\n        return 1;\n      }\n      return 0;\n    });\n\n  const handleChangeSaturday = () => {\n    setSpeakingSaturday(!speakingSaturday);\n  }\n\n  const handleChangeSunday = () => {\n    setSpeakingSunday(!speakingSunday);\n  };\n\n  const heartFavoriteHandler = (e, favoriteValue) => {\n    e.preventDefault();\n    const sessionId = parseInt(e.target.attributes[\"data-sessionid\"].value);\n    setSpeakerList(speakerList.map(item => {\n      if (item.id === sessionId) {\n        item.favorite = favoriteValue;\n        return item;\n      }\n      return item;\n    }));\n  }\n\n  if (isLoading) return <div>Loading...</div>;\n\n  return (\n    <div>\n      <Header />\n      <Menu />\n      <div className=\"container\">\n        <div className=\"btn-toolbar margintopbottom5 checkbox-bigger\">\n        {context.showSpeakerSpeakingDays === false ? null : (\n          <div className=\"hide\">\n            <div className=\"form-check-inline\">\n              <label className=\"form-check-label\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  onChange={handleChangeSaturday}\n                  checked={speakingSaturday}\n                />\n                Saturday Speakers\n              </label>\n            </div>\n            <div className=\"form-check-inline\">\n              <label className=\"form-check-label\">\n                <input\n                  type=\"checkbox\"\n                  className=\"form-check-input\"\n                  onChange={handleChangeSunday}\n                  checked={speakingSunday}\n                />\n                Sunday Speakers\n              </label>\n            </div>\n          </div>\n        )}\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"card-deck\">\n          {speakerListFiltered.map(\n            ({id, firstName, lastName, bio, favorite }) => {\n              return (\n                <SpeakerDetail\n                  key={id}\n                  id={id}\n                  favorite={favorite}\n                  onHeartFavoriteHandler={heartFavoriteHandler}\n                  firstName={firstName}\n                  lastName={lastName}\n                  bio={bio}\n                />\n              );\n            }\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Speakers;"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AATA;AAAA;AAAA;AAAA;AAcA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAFA;AAKA;AAAA;AALA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUA;AAMA;AACA;AACA;;;;A","sourceRoot":""}